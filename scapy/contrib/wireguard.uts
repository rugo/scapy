% WireGuard tests

# Type the following command to launch start the tests:
# $ test/run_tests -P "load_contrib('wireguard')" -t scapy/contrib/wireguard.uts

+ Build packets & dissect

= Build and dissect Transport
wgTransport = Wireguard()/WireguardTransport(receiver=1234, counter=1337, data=b"test123")
assert bytes(wgTransport) == b'\x04\x00\x00\x00\x00\x00\x04\xd2\x00\x00\x00\x00\x00\x00\x059test123'

wgTransport = Wireguard(b'\x04\x00\x00\x00\x00\x00\x10\xe1\x00\x00\x00\x00\x00\x00\x02\x9atest123')
assert wgTransport.type == 4
assert wgTransport[WireguardTransport].receiver == 4321
assert wgTransport[WireguardTransport].counter == 666
assert wgTransport[WireguardTransport].data == b"test123"

= Build and dissect Init
wgInit = Wireguard()/WireguardInitiation(sender=12345, 
    ephemeral=b"\xaf\xfe"*16, static=b"lul", tstamp=b"kukuk"
)
assert bytes(wgInit) == b'\x01\x00\x00\x00\x00\x0009\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfe\xaf\xfelul\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00kukuk\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

wgInit = Wireguard(b'\x01\x00\x00\x00\x00\x0009\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xffstatisch\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00nixgibts\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

assert wgInit.type == 1
assert wgInit[WireguardInitiation].sender == 12345
assert wgInit[WireguardInitiation].ephemeral == b"\xff"*32
assert wgInit[WireguardInitiation].static == b"statisch" + b"\x00" * 40
assert wgInit[WireguardInitiation].tstamp == b"nixgibts" + b"\x00" * 20

= Build and dissect Response
wgResp = Wireguard()/WireguardResponse(sender=12345, receiver=7878,
    ephemeral=b"\x41"*32, empty=b"empty", mac1=b"mac1", mac2=b"mac2"
)

assert bytes(wgResp) == b'\x02\x00\x00\x00\x00\x0009\x00\x00\x1e\xc6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAempty\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00mac1\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00mac2\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'


wgResp = Wireguard(b'\x02\x00\x00\x00\x00\x00\x04W\x00\x00\x08\xaeBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBnotempty\x00\x00\x00\x00\x00\x00\x00\x00mac1lol\x00\x00\x00\x00\x00\x00\x00\x00\x00mac2lol\x00\x00\x00\x00\x00\x00\x00\x00\x00')

assert wgResp.type == 2
assert wgResp[WireguardResponse].sender == 1111
assert wgResp[WireguardResponse].receiver == 2222
assert wgResp[WireguardResponse].ephemeral == b"B"*32
assert wgResp[WireguardResponse].empty == b"notempty" + b"\x00" * 8
assert wgResp[WireguardResponse].mac1 == b"mac1lol" + b"\x00" * 9
assert wgResp[WireguardResponse].mac2 == b"mac2lol" + b"\x00" * 9

= Build and dissect Cookie Response
wgCookie = Wireguard()/WireguardCookieReply(receiver=3333,
    nonce=b"C"*24, cookie=b"D"*16, cookie_tag=b"E"*16
)

assert bytes(wgCookie) == b'\x03\x00\x00\x00\x00\x00\r\x05CCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEE'


wgCookie = Wireguard(b'\x03\x00\x00\x00\x00\x00"\xb8KKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMM')

assert wgCookie.type == 3
assert wgCookie[WireguardCookieReply].receiver == 8888
assert wgCookie[WireguardCookieReply].nonce == b"K"*24
assert wgCookie[WireguardCookieReply].cookie == b"L" * 16
assert wgCookie[WireguardCookieReply].cookie_tag == b"M" * 16
